package com.ansgar.rdoidpc.constants

import java.awt.event.KeyEvent

enum class AdbKeyCode(val keyCode: Int, val equalKeyEvent: Int? = null) {
    KEYCODE_UNKNOWN(0),
    KEYCODE_MEN(1),
    KEYCODE_SOFT_RIGH(2),
    KEYCODE_HOME(3),
    KEYCODE_BACK(4),
    KEYCODE_CAL(5),
    KEYCODE_END_CALL(6),
    KEYCODE_0(7, KeyEvent.VK_0),
    KEYCODE_1(8, KeyEvent.VK_1),
    KEYCODE_2(9, KeyEvent.VK_2),
    KEYCODE_3(10, KeyEvent.VK_3),
    KEYCODE_4(11, KeyEvent.VK_4),
    KEYCODE_5(12, KeyEvent.VK_5),
    KEYCODE_6(13, KeyEvent.VK_6),
    KEYCODE_7(14, KeyEvent.VK_7),
    KEYCODE_8(15, KeyEvent.VK_8),
    KEYCODE_9(16, KeyEvent.VK_9),
    KEYCODE_STAR(17),
    KEYCODE_POUND(18),
    KEYCODE_DPAD_UP(19, KeyEvent.VK_UP),
    KEYCODE_DPAD_DOWN(20, KeyEvent.VK_DOWN),
    KEYCODE_DPAD_LEFT(21, KeyEvent.VK_LEFT),
    KEYCODE_DPAD_RIGHT(22, KeyEvent.VK_RIGHT),
    KEYCODE_DPAD_CENTER(23),
    KEYCODE_VOLUME_UP(24),
    KEYCODE_VOLUME_DOWN(25),
    KEYCODE_POWER(26),
    KEYCODE_CAMERA(27),
    KEYCODE_CLEAR(28),
    KEYCODE_A(29, KeyEvent.VK_A),
    KEYCODE_B(30, KeyEvent.VK_B),
    KEYCODE_C(31, KeyEvent.VK_C),
    KEYCODE_D(32, KeyEvent.VK_D),
    KEYCODE_E(33, KeyEvent.VK_E),
    KEYCODE_F(34, KeyEvent.VK_F),
    KEYCODE_G(35, KeyEvent.VK_G),
    KEYCODE_H(36, KeyEvent.VK_H),
    KEYCODE_I(37, KeyEvent.VK_I),
    KEYCODE_J(38, KeyEvent.VK_J),
    KEYCODE_K(39, KeyEvent.VK_K),
    KEYCODE_L(40, KeyEvent.VK_L),
    KEYCODE_M(41, KeyEvent.VK_M),
    KEYCODE_N(42, KeyEvent.VK_N),
    KEYCODE_O(43, KeyEvent.VK_O),
    KEYCODE_P(44, KeyEvent.VK_P),
    KEYCODE_Q(45, KeyEvent.VK_Q),
    KEYCODE_R(46, KeyEvent.VK_R),
    KEYCODE_S(47, KeyEvent.VK_S),
    KEYCODE_T(48, KeyEvent.VK_T),
    KEYCODE_U(49, KeyEvent.VK_U),
    KEYCODE_V(50, KeyEvent.VK_V),
    KEYCODE_W(51, KeyEvent.VK_W),
    KEYCODE_X(52, KeyEvent.VK_X),
    KEYCODE_Y(53, KeyEvent.VK_Y),
    KEYCODE_Z(54, KeyEvent.VK_Z),
    KEYCODE_COMMA(55, KeyEvent.VK_COMMA),
    KEYCODE_PERIOD(56, KeyEvent.VK_PERIOD),
    KEYCODE_ALT_LEFT(57),
    KEYCODE_ALT_RIGHT(58),
    KEYCODE_SHIFT_LEFT(59),
    KEYCODE_SHIFT_RIGHT(60),
    KEYCODE_TAB(61, KeyEvent.VK_TAB),
    KEYCODE_SPACE(62, KeyEvent.VK_SPACE),
    KEYCODE_SYM(63),
    KEYCODE_EXPLORER(64),
    KEYCODE_ENVELOPE(65),
    KEYCODE_ENTER(66),
    KEYCODE_DEL(67, KeyEvent.VK_BACK_SPACE),
    KEYCODE_GRAVE(68),
    KEYCODE_MINUS(69),
    KEYCODE_EQUALS(70),
    KEYCODE_LEFT_BRACKET(71, KeyEvent.VK_OPEN_BRACKET),
    KEYCODE_RIGHT_BRACKET(72, KeyEvent.VK_CLOSE_BRACKET),
    KEYCODE_BACKSLASH(73, KeyEvent.VK_BACK_SLASH),
    KEYCODE_SEMICOLON(74, KeyEvent.VK_SEMICOLON),
    KEYCODE_APOSTROPHE(75, KeyEvent.VK_QUOTE),
    KEYCODE_SLASH(76, KeyEvent.VK_SLASH),
    KEYCODE_AT(77),
    KEYCODE_NUM(78),
    KEYCODE_HEADSETHOOK(79),
    KEYCODE_FOCUS(80),
    KEYCODE_PLUS(81),
    KEYCODE_MENU(82),
    KEYCODE_NOTIFICATION(83),
    KEYCODE_SEARCH(84),
    TAG_LAST_KEYCODE(85);

    companion object {
        fun getAdbKeyEvent(e: KeyEvent?): AdbKeyCode? {
            AdbKeyCode.values().forEach { adbKeyCode ->
                if (adbKeyCode.equalKeyEvent == e?.keyCode) return adbKeyCode
            }
            return null
        }
    }
}